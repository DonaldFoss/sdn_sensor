{
    "network": {
        "promiscuous_mode": true,
        "mtu":              1454,
        "ipv4_address":     "192.168.2.7/24",
        "ipv4_gateway":     "192.168.2.1",
        "ipv6_address":     "2602:306:322e:5ae8::7/64",
        "ipv6_gateway":     "2602:306:322e:5ae8::1",
    },
    
    "dpdk": {
        // XXX: DPDK options are always strings right now
        "eal_options":      "sdn_sensor -c 0x2 -n 2 --huge-dir /hugetlbfs --proc-type primary -w 01:00.1",
        "log_level":        "info",
        "port_mask":        4294967295, // 0xffffffff
        "queue_count":      2,
        "timer_msec":       200,
    },
    
    // matches Syslog messages against this list of PCRE's,
    // dispatches matches to nanomsg queues
    "re_chain": [
        {
            "name": "",
            "re": "",
            "nm_queue_format": "metadata",
            "nm_queue_type": "PUSH",
            "nm_queue_url": "tcp://127.0.0.1:10001",
        },
    ],
    
    // matches raw traffic against this list of libpcap filters,
    // dispatches data to nanomsg queues
    "pcap_chain": [
        {
            "name": "http_get_request",
            "filter": "(port 80 or port 443) and (tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x47455420 or tcp[((tcp[12:1] & 0xf0) >> 2)+8:4] = 0x20323030)",
            "nm_queue_format": "metadata",
            "nm_queue_type": "PUSH",
            "nm_queue_url": "tcp://192.168.1.6:10002",
        },
        {
            "name": "udp_packet",
            "filter": "udp",
            "nm_queue_format": "metadata",
            "nm_queue_type": "PUSH",
            "nm_queue_url": "tcp://192.168.1.6:10002",
        }
    ],
    
    // matches raw traffic IP addresses against this list of CIDRs,
    // dispatches metadata to nanomsg queues
    "cidr_table": [
        {
            "name": "cidr_rule",
            "nm_queue_format": "metadata",
            "nm_queue_type": "PUSH",
            "nm_queue_url": "tcp://127.0.0.1:10003",
        }
    ],
    
    // intercepts DNS packet content,
    // dispatches metadata to nanomsg queues
    // XXX: figure out how to filter this
    "dns_chain": [
        {
            "name": "dns_rule",
            "nm_queue_format": "metadata",
            "nm_queue_type": "PUSH",
            "nm_queue_url": "tcp://127.168.1.6:10002",
        }
    ],
    
    "ioc_files": [
        "/home/mhall/output.csv"
    ],
    
    // list of source CIDRs sending Syslog
    "syslog_udp_sources": {
    },
    "syslog_tcp_sources": {
    },
    
    // list of source CIDRs sending Raw traffic
    "raw_sources": {
    },
    
    // list of source CIDRs sending sFlow traffic
    "sflow_sources": {
    },
    
    // list of source CIDRs sending Netflow / IPFIX traffic
    "ipfix_sources": {
    },
}
